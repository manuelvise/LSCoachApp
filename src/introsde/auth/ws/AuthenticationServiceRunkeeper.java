
package introsde.auth.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AuthenticationServiceRunkeeper", targetNamespace = "http://ws.auth.introsde/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AuthenticationServiceRunkeeper {


    /**
     * 
     * @param authCode
     * @param callbackUrl
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "accessToken", targetNamespace = "")
    @RequestWrapper(localName = "getAccessToken", targetNamespace = "http://ws.auth.introsde/", className = "introsde.auth.ws.GetAccessToken")
    @ResponseWrapper(localName = "getAccessTokenResponse", targetNamespace = "http://ws.auth.introsde/", className = "introsde.auth.ws.GetAccessTokenResponse")
    @Action(input = "http://ws.auth.introsde/AuthenticationServiceRunkeeper/getAccessTokenRequest", output = "http://ws.auth.introsde/AuthenticationServiceRunkeeper/getAccessTokenResponse")
    public String getAccessToken(
        @WebParam(name = "authCode", targetNamespace = "")
        String authCode,
        @WebParam(name = "callbackUrl", targetNamespace = "")
        String callbackUrl);

    /**
     * 
     * @param redirectUri
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "AuthenticationUrl", targetNamespace = "")
    @RequestWrapper(localName = "getAuthenticationUrl", targetNamespace = "http://ws.auth.introsde/", className = "introsde.auth.ws.GetAuthenticationUrl")
    @ResponseWrapper(localName = "getAuthenticationUrlResponse", targetNamespace = "http://ws.auth.introsde/", className = "introsde.auth.ws.GetAuthenticationUrlResponse")
    @Action(input = "http://ws.auth.introsde/AuthenticationServiceRunkeeper/getAuthenticationUrlRequest", output = "http://ws.auth.introsde/AuthenticationServiceRunkeeper/getAuthenticationUrlResponse")
    public String getAuthenticationUrl(
        @WebParam(name = "redirectUri", targetNamespace = "")
        String redirectUri);

}
